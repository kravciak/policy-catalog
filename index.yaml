apiVersion: v1
entries:
  affinity-node-selector:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kravciak/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:50.662518514Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: 85566067b6894d2c39a4c2fe8529758133f9e59c45824600153c93d2c776e3aa
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/affinity-node-selector-1.0.3/affinity-node-selector-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Affinity Node Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/affinity-node-selector
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:21.380258165Z"
    description: 'This Policy allows setting a key and value for `nodeSelector` when
      assigning pods to nodes.   `nodeSelector` is a field of PodSpec. It specifies
      a map of key-value pairs. For the pod to be eligible to scheduled on a node,
      the node must have each of the indicated key-value pairs as labels (it can have
      additional labels as well).  '
    digest: 894ba58e0f0544e4719a8ab6afbbd45eb0ed0194667c9e88cdbefb3f7e7e8c37
    home: https://github.com/kubewarden/rego-policies-library
    name: affinity-node-selector
    sources:
    - ghcr.io/kubewarden/policies/affinity-node-selector:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/affinity-node-selector-1.0.2/affinity-node-selector-1.0.2.tgz
    version: 1.0.2
  allow-privilege-escalation-psp:
  - annotations:
      artifacthub.io/repository: allow-privilege-escalation-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allow Privilege Escalation PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allow-privilege-escalation-psp
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:50.753398581Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowance of privilege escalation in containers and init containers of a
      pod
    digest: 6ce4d122fc6972d4d1455dae54eff7bcbf349a370bc0451de83bacd3485ba685
    home: https://github.com/kubewarden/allow-privilege-escalation-psp-policy
    keywords:
    - PSP
    - privilege escalation
    name: allow-privilege-escalation-psp
    sources:
    - ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allow-privilege-escalation-psp-1.0.0/allow-privilege-escalation-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allow-privilege-escalation-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allow Privilege Escalation PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allow-privilege-escalation-psp
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.7
    apiVersion: v1
    appVersion: 0.2.7
    created: "2025-04-15T06:58:21.487345437Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowance of privilege escalation in containers and init containers of a
      pod
    digest: fef03c497be981fa0e75de9aefbc19ed20c2121416e0edd1e4af0f078fab5355
    home: https://github.com/kubewarden/allow-privilege-escalation-psp-policy
    keywords:
    - PSP
    - privilege escalation
    name: allow-privilege-escalation-psp
    sources:
    - ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.2.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allow-privilege-escalation-psp-0.2.7/allow-privilege-escalation-psp-0.2.7.tgz
    version: 0.2.7
  allowed-fsgroups-psp:
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:44.354422173Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 6ad71e89b3fb020b4c390618076542d744b200819f2fbe989add996dd2ecd01b
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.2/allowed-fsgroups-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:50.857561891Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: 288e5c3bf5a88039011a4cb1b0e819a88839b690450005d62597a62566639f07
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-fsgroups-psp-1.0.0/allowed-fsgroups-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allowed-fsgroups-psp-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Fs Groups PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-fsgroups-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.10
    apiVersion: v1
    appVersion: 0.1.10
    created: "2025-04-15T06:58:21.596822132Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of fsGroups in the pod security context
    digest: a7a27bea46a9c3eeb5eecea8b9028a3485f2c280594ccc29153f5f3698f3f394
    home: https://github.com/kubewarden/allowed-fsgroups-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-fsgroups-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-fsgroups-psp:v0.1.10
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-fsgroups-psp-0.1.10/allowed-fsgroups-psp-0.1.10.tgz
    version: 0.1.10
  allowed-proc-mount-types-psp:
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:44.47877091Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: 2d4741eb57ab1666817b2e537857e840ab590af832777c796743bf3acb55b678
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.2/allowed-proc-mount-types-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:50.97969622Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: 6f4f21514380e96cf449775fe06316276e9e55a9cc53d597ee0585478670208b
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-proc-mount-types-psp-1.0.0/allowed-proc-mount-types-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: allowed-proc-mount-types-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Allowed Proc Mount Types PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/allowed-proc-mount-types-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - UPDATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-04-15T06:58:21.720727406Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of /proc mount types
    digest: 1851262f807b41a30631844cc5d233ddefde590966b492b677cc8c609e899827
    home: https://github.com/kubewarden/allowed-proc-mount-types-psp-policy
    keywords:
    - psp
    - container
    - runtime
    name: allowed-proc-mount-types-psp
    sources:
    - ghcr.io/kubewarden/policies/allowed-proc-mount-types-psp:v0.1.11
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/allowed-proc-mount-types-psp-0.1.11/allowed-proc-mount-types-psp-0.1.11.tgz
    version: 0.1.11
  block-workloads-created-without-specifying-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.101120833Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: e5e7ab261f364defeeb0c65558309fb937c00f285e9594490948072d19342f7b
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.3/block-workloads-created-without-specifying-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Block Workloads Created Without Specifying Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/block-workloads-created-without-specifying-namespace
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:21.823538088Z"
    description: 'Using this Policy, you can prohibit workloads from being created
      in a default namespace due to the lack of a namespace label.  '
    digest: 265caf7cfa1b945fd0d053a9d5e5df4e240f1ebb9d852a8aa9f3771df2318ebc
    home: https://github.com/kubewarden/rego-policies-library
    name: block-workloads-created-without-specifying-namespace
    sources:
    - ghcr.io/kubewarden/policies/block-workloads-created-without-specifying-namespace:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/block-workloads-created-without-specifying-namespace-1.0.2/block-workloads-created-without-specifying-namespace-1.0.2.tgz
    version: 1.0.2
  bucket-approved-region:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.213499335Z"
    description: Bucket region must be one of the approved regions.
    digest: 0c6e4b26d6f1940c9a0f632c2be72cbb21411c6a11292a4db1e923757da75c08
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-approved-region-1.0.3/bucket-approved-region-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Approved Region
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-approved-region
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:21.964169466Z"
    description: Bucket region must be one of the approved regions.
    digest: b39e3353dde9881c89bfa1fa7c5a2afc2ee9df851f1be09cbfa592d0b4f8d3b1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-approved-region
    sources:
    - ghcr.io/kubewarden/policies/bucket-approved-region:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-approved-region-1.0.2/bucket-approved-region-1.0.2.tgz
    version: 1.0.2
  bucket-endpoint-domain:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.303512962Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: 65296d1f6856e474ce2f3226787b1b2455d6ccfacd1a5e636e724d7bae1421e4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-endpoint-domain-1.0.3/bucket-endpoint-domain-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Endpoint Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-endpoint-domain
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:22.073366071Z"
    description: Bucket endpoint domain must be one of the trusted domains.
    digest: 37a0da733f551b2efc545de61bfc548071a051466d7c1bf64a5fab5fffa7d1f8
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-endpoint-domain
    sources:
    - ghcr.io/kubewarden/policies/bucket-endpoint-domain:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-endpoint-domain-1.0.2/bucket-endpoint-domain-1.0.2.tgz
    version: 1.0.2
  bucket-insecure-connections:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.407676389Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: 2823907401c62b72137477f8460844f6ee48f96d27095f371d001207d8628af7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-insecure-connections-1.0.3/bucket-insecure-connections-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Bucket Insecure Connections
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/bucket-insecure-connections
      kubewarden/resources: Bucket
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - buckets
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:22.160265917Z"
    description: Ensure that Bucket objects do not use insecure connections
    digest: 7288c9449435399e5b00a315fe458c63ea24dc5560fb15b0478b520862d59df3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: bucket-insecure-connections
    sources:
    - ghcr.io/kubewarden/policies/bucket-insecure-connections:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/bucket-insecure-connections-1.0.2/bucket-insecure-connections-1.0.2.tgz
    version: 1.0.2
  capabilities-psp:
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:45.066307506Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 88a7a9eb79bf5be1b450164ed4b70470f4cf650dd632b3f92dd20ab3a216e4ab
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/capabilities-psp-1.0.2/capabilities-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:51.508908785Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: f38a359c0b4b1f0138fd74f674067f22525ce2f813842d517773d142f7bc799c
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/capabilities-psp-1.0.0/capabilities-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: capabilities-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Capabilities PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/capabilities-psp
      kubewarden/resources: Pod,Deployment,ReplicaSet,StatefulSet,DaemonSet,Job,CronJob,ReplicationController
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
      kubewarden/tag: v0.1.16
    apiVersion: v1
    appVersion: 0.1.16
    created: "2025-04-15T06:58:22.258758675Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of capabilities
    digest: 95364f3aedd421e1ec2f129ea4a561cd6c8a06de45cb103b1b60c9c6c65b7170
    home: https://github.com/kubewarden/capabilities-psp-policy
    keywords:
    - psp
    - container
    - capability
    - capabilities
    name: capabilities-psp
    sources:
    - ghcr.io/kubewarden/policies/capabilities-psp:v0.1.16
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/capabilities-psp-0.1.16/capabilities-psp-0.1.16.tgz
    version: 0.1.16
  cel-policy:
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.3
    apiVersion: v1
    appVersion: 1.3.3
    created: "2025-07-01T20:20:45.202895991Z"
    description: A policy that evaluates CEL expressions
    digest: e0392b7d363e1f056facacdd363cf810718628a8aa350f85b0fd55c3f9f74d51
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/cel-policy-1.3.3/cel-policy-1.3.3.tgz
    version: 1.3.3
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.1
    apiVersion: v1
    appVersion: 1.3.1
    created: "2025-05-05T10:28:51.61015431Z"
    description: A policy that evaluates CEL expressions
    digest: 22a3a8b2f5a5ebf4f1811721d647b64cdfb03855abe5a5aa607e2e9ecc08323d
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/cel-policy-1.3.1/cel-policy-1.3.1.tgz
    version: 1.3.1
  - annotations:
      artifacthub.io/repository: cel-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: CEL Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/cel-policy
      kubewarden/resources: Any
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
      kubewarden/tag: v1.3.0
    apiVersion: v1
    appVersion: 1.3.0
    created: "2025-04-15T06:58:22.376302218Z"
    description: A policy that evaluates CEL expressions
    digest: e44494dc8e8f7fc1a4936eb7674083e1319ff8314f941d769729f7361b1708d2
    home: https://github.com/kubewarden/cel-policy
    keywords:
    - compliance
    - CEL
    - ValidatingAdmissionPolicy
    - Common Expression Language
    name: cel-policy
    sources:
    - ghcr.io/kubewarden/policies/cel-policy:v1.3.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/cel-policy-1.3.0/cel-policy-1.3.0.tgz
    version: 1.3.0
  container-block-sysctl:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.731695456Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 419bb3bfad064e2e82206f6bf976ec2bc13ea58e03df742bcb4c56381d9e2540
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-block-sysctl-1.0.3/container-block-sysctl-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-15T06:58:22.472901755Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: a8bfc45cb3e7003ebc6e9117151656b7385f0072ca62d0bbd78963f69b371e7a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl:v1.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-block-sysctl-1.0.1/container-block-sysctl-1.0.1.tgz
    version: 1.0.1
  container-block-sysctl.cve-2022-0811:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:51.82193073Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: d133c250fe96f882cd5a90545875e70e8fa80b310feb2fc79939418e2eb71f7a
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.3/container-block-sysctl.cve-2022-0811-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Block Sysctls CVE-2022-0811
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-block-sysctl.cve-2022-0811
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-15T06:58:22.585930796Z"
    description: 'Setting sysctls can allow containers unauthorized escalated privileges
      to a Kubernetes node.  '
    digest: 26429ef4d2c5c07369ce97ef5200ad2841c725bbf809e89b5783ef3b1c8aadc3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-block-sysctl.cve-2022-0811
    sources:
    - ghcr.io/kubewarden/policies/container-block-sysctl.cve-2022-0811:v1.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-block-sysctl.cve-2022-0811-1.0.1/container-block-sysctl.cve-2022-0811-1.0.1.tgz
    version: 1.0.1
  container-resources:
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:45.523165828Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 476184ff78491e8a3b5023446eec8f3351451b689b319fbb726c9f171616dab8
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-resources-1.0.2/container-resources-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:51.961973264Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: c73d85c60e58246147b6e011cf092f3d461e9b29d9fac0a4b9f70b88eb1cf4eb
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-resources-1.0.0/container-resources-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: container-resources
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Resources
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-resources
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.0
    apiVersion: v1
    appVersion: 0.3.0
    created: "2025-04-15T06:58:22.699211829Z"
    description: Policy is designed to enforce constraints on the resource requirements
      of Kubernetes containers
    digest: 8b6ded408ed9856b4171690a0d67a7ec0364c8041f08506bce366543f471f94e
    home: https://github.com/kubewarden/container-resources-policy
    keywords:
    - container
    - resources
    name: container-resources
    sources:
    - ghcr.io/kubewarden/policies/container-resources:v0.3.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-resources-0.3.0/container-resources-0.3.0.tgz
    version: 0.3.0
  container-running-as-root:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.067900695Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: 42cad87fda5ada5e754ad086264aa9f4d88ac482fedcb10c8fdcd45075d150a0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-running-as-root-1.0.3/container-running-as-root-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As Root
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-root
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-15T06:58:22.800953824Z"
    description: 'Running as root gives the container full access to all resources
      in the VM it is running on. Containers should not run with such access rights
      unless required by design. This Policy enforces that the `securityContext.runAsNonRoot`
      attribute is set to `true`.  '
    digest: 9e989b0367177ee1e6d53f6c6c58fc07d955d76ae180344133f65b341ade1dd1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-root
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-root:v1.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-running-as-root-1.0.1/container-running-as-root-1.0.1.tgz
    version: 1.0.1
  container-running-as-user:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.171636186Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: aeddd1896330f91cf0504a95f1b71ed4acf0ae9203a122ba6a8d163be6dceadf
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-running-as-user-1.0.3/container-running-as-user-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Container Running As User
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/container-running-as-user
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-15T06:58:22.904298338Z"
    description: 'Containers has a feature in which you specify the ID of the user
      which all processes in the container will run with. This Policy enforces that
      the `securityContext.runAsUser` attribute is set to a uid greater than root
      uid. Running as root user gives the container full access to all resources in
      the VM it is running on. Containers should not run with such access rights unless
      required by design.  '
    digest: 6daea30d47fc5132b78e2ec1aed23fc7c29265a45b20ad0dba473de147895c34
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: container-running-as-user
    sources:
    - ghcr.io/kubewarden/policies/container-running-as-user:v1.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/container-running-as-user-1.0.1/container-running-as-user-1.0.1.tgz
    version: 1.0.1
  containers-block-specific-image-names:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.263571072Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: 0401fe21f9e7989af052cc955022cb536ad4bb2330bea414fac5ca5c6724f868
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-block-specific-image-names-1.0.3/containers-block-specific-image-names-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Specific Image Names
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-specific-image-names
      kubewarden/resources: CronJob, DaemonSet, Deployment, Job, Pod, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - cronjobs
          - jobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:23.041911238Z"
    description: 'This Policy prohibits images with certain image names from being
      deployed by specifying a list of unapproved names.  '
    digest: e673b96820502cd48db35907bfe0fc056b87c32ecf574318df9f950ac3e152d3
    home: https://github.com/kubewarden/rego-policies-library
    name: containers-block-specific-image-names
    sources:
    - ghcr.io/kubewarden/policies/containers-block-specific-image-names:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-block-specific-image-names-1.0.2/containers-block-specific-image-names-1.0.2.tgz
    version: 1.0.2
  containers-block-ssh-port:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.348701466Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 5a4f0bcb09c6be0cd5319c8e1efa5dec28e05499a817331363d1dfd940b7bfa4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-block-ssh-port-1.0.3/containers-block-ssh-port-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Block Ssh Port
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-block-ssh-port
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.1
    apiVersion: v1
    appVersion: 1.0.1
    created: "2025-04-15T06:58:23.159515596Z"
    description: 'This Policy checks if the container is exposing ssh port. '
    digest: 4d835c25cb6e039a7f1841f36a327872e4c3944d4d0ef97943e4c1f9ee592bc7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    name: containers-block-ssh-port
    sources:
    - ghcr.io/kubewarden/policies/containers-block-ssh-port:v1.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-block-ssh-port-1.0.1/containers-block-ssh-port-1.0.1.tgz
    version: 1.0.1
  containers-missing-security-context:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.456426004Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: 8674589ad81d5bee5cb2223468208bcfc6d7b70363f280b237857212ad9f6906
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-missing-security-context-1.0.3/containers-missing-security-context-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Missing Security Context
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-missing-security-context
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:23.277384516Z"
    description: 'This Policy checks if the container is missing securityContext while
      there is no securityContext defined on the Pod level as well. The security settings
      that are specified on the Pod level apply to all containers in the Pod. '
    digest: 0f5282cf1b16c8e54da4a331d329b6b4bab18f11738dc3403ca0bcd75d2743bb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - pci-dss
    - cis-benchmark
    - mitre-attack
    - nist800-190
    - gdpr
    - default
    name: containers-missing-security-context
    sources:
    - ghcr.io/kubewarden/policies/containers-missing-security-context:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-missing-security-context-1.0.2/containers-missing-security-context-1.0.2.tgz
    version: 1.0.2
  containers-should-not-run-in-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:52.553264812Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: 61efa46d0844167e473dad2af2690bf2149617fa6a917d2325a0d0160bb20e4b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.3/containers-should-not-run-in-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Containers Should Not Run In Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/containers-should-not-run-in-namespace
      kubewarden/resources: Pod, Deployment, Job, ReplicationController, ReplicaSet,
        DaemonSet, StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:23.387054842Z"
    description: 'This Policy ensure workloads are not running in a specified namespace.  '
    digest: bbb88295da6e75db1ab4312244825c0ad07d7678daf07e2a39ffff5995dfbc72
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - cis-benchmark
    - soc2-type1
    name: containers-should-not-run-in-namespace
    sources:
    - ghcr.io/kubewarden/policies/containers-should-not-run-in-namespace:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/containers-should-not-run-in-namespace-1.0.2/containers-should-not-run-in-namespace-1.0.2.tgz
    version: 1.0.2
  deprecated-api-versions:
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:46.34534581Z"
    description: Find deprecated and removed Kubernetes resources
    digest: 62cddadd6a7086c22fba2103949b6ddf510f2951d690cc7868d7b35ae0bfe6d3
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/deprecated-api-versions-1.0.2/deprecated-api-versions-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:52.661250386Z"
    description: Find deprecated and removed Kubernetes resources
    digest: d893d1931542a00d73e8c38ce3dd6710685fdbe7126a70be1ef892c273305d46
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/deprecated-api-versions-1.0.0/deprecated-api-versions-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: deprecated-api-versions-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Deprecated API Versions
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/deprecated-api-versions
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiextensions.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apiregistration.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - apps
          apiVersions:
          - v1beta1
          - v1beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - audit.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - authentication.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - autoscaling
          apiVersions:
          - v2beta1
          - v2beta2
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - batch
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - certificates.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - coordination.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - discovery.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - events.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - extensions
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - flowcontrol.apiserver.k8s.io
          apiVersions:
          - v1beta1
          - v1beta2
          - v1beta3
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - node.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - policy
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - scheduling.k8s.io
          apiVersions:
          - v1alpha1
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
        - apiGroups:
          - storage.k8s.io
          apiVersions:
          - v1beta1
          resources:
          - '*'
          operations:
          - CREATE
      kubewarden/tag: v0.2.0
    apiVersion: v1
    appVersion: 0.2.0
    created: "2025-04-15T06:58:23.482256419Z"
    description: Find deprecated and removed Kubernetes resources
    digest: b5c1cfd388ab779f88c9fde035dc00cad02f8d8c6acd118e60aedd959edeec13
    home: https://github.com/kubewarden/deprecated-api-versions-policy
    keywords:
    - compliance
    - deprecated API
    name: deprecated-api-versions
    sources:
    - ghcr.io/kubewarden/policies/deprecated-api-versions:v0.2.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/deprecated-api-versions-0.2.0/deprecated-api-versions-0.2.0.tgz
    version: 0.2.0
  disallow-service-loadbalancer:
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-01T20:20:46.449070404Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 136b30cf0383fa85b930ba6e08f53e5acf304510793c8e882d80559f6e958aa4
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v1.0.4
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/disallow-service-loadbalancer-1.0.4/disallow-service-loadbalancer-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: disallow-service-loadbalancer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Loadbalancer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-loadbalancer
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-04-15T06:58:23.576063547Z"
    description: A policy that prevents the creation of Service resources of type
      `LoadBalancer`
    digest: 90f92658f038d5d09cf27565f54ea192110d425431815d9f09f2155005e6aa07
    home: https://github.com/kubewarden/disallow-service-loadbalancer-policy
    keywords:
    - service
    name: disallow-service-loadbalancer
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-loadbalancer:v0.1.8
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/disallow-service-loadbalancer-0.1.8/disallow-service-loadbalancer-0.1.8.tgz
    version: 0.1.8
  disallow-service-nodeport:
  - annotations:
      artifacthub.io/repository: disallow-service-nodeport
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Disallow Service Nodeport
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/disallow-service-nodeport
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-04-15T06:58:23.679386661Z"
    description: A policy that prevents the creation of Service resources of type
      `NodePort`
    digest: 3bf7e40fe6fb7bfb6414c15fd9085ab561059419cd5119b9659cb4c71b545e6e
    home: https://github.com/kubewarden/disallow-service-nodeport-policy
    keywords:
    - service
    name: disallow-service-nodeport
    sources:
    - ghcr.io/kubewarden/policies/disallow-service-nodeport:v0.1.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/disallow-service-nodeport-0.1.7/disallow-service-nodeport-0.1.7.tgz
    version: 0.1.7
  do-not-expose-admission-controller-webhook-services:
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:52.76527312Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: 3e6618c1358ab02856530176b9078a28990e66f52d0ed3cfc56de6f9c12663c0
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-1.0.0/do-not-expose-admission-controller-webhook-services-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: do-not-expose-admission-controller-webhook-services
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Do not expose admission controller webhook services
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/do-not-expose-admission-controller-webhook-services
      kubewarden/resources: ValidatingWebhookConfiguration, MutatingWebhookConfiguration
      kubewarden/rules: |
        - apiGroups:
          - admissionregistration.k8s.io
          apiVersions:
          - v1
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.0
    apiVersion: v1
    appVersion: 0.1.0
    created: "2025-04-15T06:58:23.7774794Z"
    description: A policy that detects webhook services used by admission controllers
      that are accidentally exposed outside of the cluster
    digest: e88a4b26f70b0c07a039b744f365e53fd0f22f6326672b5df1c2f0b8600762e7
    home: https://github.com/yourorg/do-not-expose-admission-controller-webhook-services
    keywords:
    - webhooks
    name: do-not-expose-admission-controller-webhook-services
    sources:
    - ghcr.io/kubewarden/policies/do-not-expose-admission-controller-webhook-services:v0.1.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/do-not-expose-admission-controller-webhook-services-0.1.0/do-not-expose-admission-controller-webhook-services-0.1.0.tgz
    version: 0.1.0
  echo:
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-07-01T20:20:46.82806815Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: 58b6196fd7895f06a7f356091a1711a5afd21a521a493ba370f3248df5061f24
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.8
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/echo-0.1.8/echo-0.1.8.tgz
    version: 0.1.8
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.6
    apiVersion: v1
    appVersion: 0.1.6
    created: "2025-05-05T10:28:52.866088362Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: a5b5afb3cb82a45bd17c90cdf5e607605fc0035c52cfdf02023d9d0fd031e853
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.6
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/echo-0.1.6/echo-0.1.6.tgz
    version: 0.1.6
  - annotations:
      artifacthub.io/repository: echo
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Echo
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/echo
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
          - DELETE
          - CONNECT
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-04-15T06:58:23.886617764Z"
    description: A policy that echoes back Kubernetes' AdmissionReview - useful for
      Policy Authors
    digest: 5b23f7cafb49cdc3cc086ef78fc90ef772171a5d8683e670c2aeebb6b75980af
    home: https://github.com/kubewarden/echo
    keywords:
    - developer
    name: echo
    sources:
    - ghcr.io/kubewarden/policies/echo:v0.1.5
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/echo-0.1.5/echo-0.1.5.tgz
    version: 0.1.5
  env-variable-secrets-scanner:
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-01T20:20:46.94233523Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: d6b5e73ae253aa38816006af05a2bca719c26dc8aefaee4618a164310db4ace9
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.3/env-variable-secrets-scanner-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:52.957541417Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: 3bf5f0e8f22c510fbdbdc1ae3c93911d3c4a2ad1165bd56efff58e73cec2fbee
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/env-variable-secrets-scanner-1.0.0/env-variable-secrets-scanner-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: env-variable-secrets-scanner
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Secrets Scanner
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/env-variable-secrets-scanner
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.8
    apiVersion: v1
    appVersion: 0.1.8
    created: "2025-04-15T06:58:23.98368297Z"
    description: Policy that inspects env vars and rejects a request if a secret was
      found
    digest: 6fa247d49e8ea34418c31a299447ec903eb6fde1d78a6aabfb762023f6c7a1dd
    home: https://github.com/kubewarden/env-variable-secrets-scanner-policy
    keywords:
    - secrets
    - api keys
    - tokens
    - secret leak
    - confidential data
    - confidential data leak
    name: env-variable-secrets-scanner
    sources:
    - ghcr.io/kubewarden/policies/env-variable-secrets-scanner:v0.1.8
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/env-variable-secrets-scanner-0.1.8/env-variable-secrets-scanner-0.1.8.tgz
    version: 0.1.8
  environment-variable-policy:
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v2.0.1
    apiVersion: v1
    appVersion: 2.0.1
    created: "2025-07-01T20:20:47.064708Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 157de73e2c40f8aff2331e76ac0292ef9b12e40380bf08b9ab236f17e7e2a3fc
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v2.0.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/environment-variable-policy-2.0.1/environment-variable-policy-2.0.1.tgz
    version: 2.0.1
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:53.055864444Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 5323a53d4bfcd2446cb0239342d649f77a3e1128496ae9be50ddf3879c4dd05c
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/environment-variable-policy-1.0.0/environment-variable-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: environment-variable-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Environment Variable Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/environment-variable-policy
      kubewarden/resources: Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob,Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-04-15T06:58:24.096892819Z"
    description: A Kubewarden Policy that controls the usage of environment variables
    digest: 0be35f4a758383c86b31f4615355db9adceb4775bd45e39d68197e86473c694f
    home: https://github.com/kubewarden/environment-variable-policy
    keywords:
    - deployment
    - replicaset
    - statefulset
    - daemonset
    - replicationcontroller
    - job
    - cronjob
    - pod
    - container
    - environment-variables
    name: environment-variable-policy
    sources:
    - ghcr.io/kubewarden/policies/environment-variable-policy:v0.1.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/environment-variable-policy-0.1.7/environment-variable-policy-0.1.7.tgz
    version: 0.1.7
  flexvolume-drivers-psp:
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:47.214925276Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: a62097a26c629576fba102b6cee9c96726ffaa140d9cfa721d186bc14cc21fad
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.2/flexvolume-drivers-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:53.151851979Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: e3ba97355679bc865a0fe4077d49e7cd408b268f43a09dfa34af57feed39e3bc
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/flexvolume-drivers-psp-1.0.0/flexvolume-drivers-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: flexvolume-drivers-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Flexvolume Drivers Psp
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/flexvolume-drivers-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-04-15T06:58:24.204762097Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the allowed `flexVolume` drivers
    digest: 95274d6b9de1a598c5b9ec9b9ad5b784f14e9c5964d185edaa5af291dc2a4c97
    home: https://github.com/kubewarden/flexvolume-drivers-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - flex volume
    - flex
    name: flexvolume-drivers-psp
    sources:
    - ghcr.io/kubewarden/policies/flexvolume-drivers-psp:v0.1.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/flexvolume-drivers-psp-0.1.7/flexvolume-drivers-psp-0.1.7.tgz
    version: 0.1.7
  gitrepository-ignore-suffixes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.259710833Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: d6002949b4544315c98edc1efe5a913eeb58c7cdb5a8f1166b08cf6118ec7628
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.3/gitrepository-ignore-suffixes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-ignore-suffixes
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.320467258Z"
    description: GitRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit.
    digest: cf802a7b883a3ea9cdf45100766db6d71549a34cbdf53fc1fc8c6a02ab915199
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-ignore-suffixes:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-ignore-suffixes-1.0.2/gitrepository-ignore-suffixes-1.0.2.tgz
    version: 1.0.2
  gitrepository-organization-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.38755532Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: 15db628cfb87a09f0b845f2f59945bba679195209068bb6fb431894d61f86869
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-organization-domains-1.0.3/gitrepository-organization-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-organization-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.417360908Z"
    description: GitRepository resources must only be from allowed organization domains.
    digest: b39552f32612874b3d7bfa30cac1f85cbae01fbb3be488aaa324a546fc861e8f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-organization-domains:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-organization-domains-1.0.2/gitrepository-organization-domains-1.0.2.tgz
    version: 1.0.2
  gitrepository-specific-branch:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.481283554Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: cfa11213c637160ab34953a8e72e84b59caaa6ce82f6d5dddc59f20fff66a99e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-specific-branch-1.0.3/gitrepository-specific-branch-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Specific Branch
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-specific-branch
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.515970995Z"
    description: GitRepository resources must reference a specific branch, e.g. 'main'.
    digest: 9bd60303662ccf72ff6aa0d814957c7feedb959605f8ef44eef0a250a7800f6e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-specific-branch
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-specific-branch:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-specific-branch-1.0.2/gitrepository-specific-branch-1.0.2.tgz
    version: 1.0.2
  gitrepository-untrusted-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.57109339Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: f7d8b389bc40bafc718f21de28fb978f7bb3ace0ebe672e3bffc01ba9b9fe2e2
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.3/gitrepository-untrusted-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: GitRepository Untrusted Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/gitrepository-untrusted-domains
      kubewarden/resources: GitRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.634310971Z"
    description: GitRepository resources must not use targets from untrusted domains.
    digest: 1633325758d101c491bc61f5ec4bd853cba0e1bc6894305a1f99897da1635999
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: gitrepository-untrusted-domains
    sources:
    - ghcr.io/kubewarden/policies/gitrepository-untrusted-domains:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/gitrepository-untrusted-domains-1.0.2/gitrepository-untrusted-domains-1.0.2.tgz
    version: 1.0.2
  helm-chart-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.674212088Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: e763771030ddbdace1e6a13b32dc06b1b0b74c15e5bab825e1ee3fb9bb94d617
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.3/helm-chart-cosign-verification-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-cosign-verification
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.727144822Z"
    description: HelmChart objects must provide cosign verification and reference
      a secret containing the Cosign public keys of trusted authors
    digest: d9bcdd4743bdddb71ebdad3eba364faba6a017ff0bee45df3f939ec3c3294952
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-cosign-verification:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-chart-cosign-verification-1.0.2/helm-chart-cosign-verification-1.0.2.tgz
    version: 1.0.2
  helm-chart-values-files-format:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.785505494Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: 46a2dea73640181e4177def07246590058fa07841bf5c37c3be2250b6d3fe730
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-chart-values-files-format-1.0.3/helm-chart-values-files-format-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: HelmChart Values File Format
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-chart-values-files-format
      kubewarden/resources: HelmChart
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmcharts
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.868625392Z"
    description: 'HelmChart must reference values files in the following format: ''xxx=values.yaml''.'
    digest: 1ab2cae53cc1278b7cd6bc36f4dd6dd2ccca109884f10a33a15443133cb08c62
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-chart-values-files-format
    sources:
    - ghcr.io/kubewarden/policies/helm-chart-values-files-format:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-chart-values-files-format-1.0.2/helm-chart-values-files-format-1.0.2.tgz
    version: 1.0.2
  helm-release-max-history:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.879598071Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 2eb01f916cc066d7d5b1c54267cb80a3d03ca4a878f9ea355ccdf567dec5d30c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-max-history-1.0.3/helm-release-max-history-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Max History
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-max-history
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:24.962787023Z"
    description: HelmRelease maxHistory cannot exceed the specified value.
    digest: 7d2fb74af215e7736c139a0ff458a55f3d816a4c7a4ebd6ba93a2b320c82c06e
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-max-history
    sources:
    - ghcr.io/kubewarden/policies/helm-release-max-history:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-max-history-1.0.2/helm-release-max-history-1.0.2.tgz
    version: 1.0.2
  helm-release-namespace-match:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:53.980648249Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: e17953f67ffdfd4eb9b8e8b2c8fd833e048f6d7b408757aadcaf8d8818be113b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-namespace-match-1.0.3/helm-release-namespace-match-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Namespace Match
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-namespace-match
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.067372548Z"
    description: HelmRelease storageNamespace and targetNamespace must match.
    digest: 6d284670a73101bc2c05ae3201b74c67137f8f57f327aac88e7d27beda8c5003
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-namespace-match
    sources:
    - ghcr.io/kubewarden/policies/helm-release-namespace-match:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-namespace-match-1.0.2/helm-release-namespace-match-1.0.2.tgz
    version: 1.0.2
  helm-release-post-renderer:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.092025035Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: 9f6e39657a998f33c93b04859699c81a9fbf3a54754f91fbdf299701c8d4a2c5
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-post-renderer-1.0.3/helm-release-post-renderer-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Post Renderer
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-post-renderer
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.174489164Z"
    description: HelmRelease must not have post-renderers enabled.
    digest: 7a4a9c409e3c9dab8579e14977c6b706929c80070314418123a411143d93a354
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-post-renderer
    sources:
    - ghcr.io/kubewarden/policies/helm-release-post-renderer:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-post-renderer-1.0.2/helm-release-post-renderer-1.0.2.tgz
    version: 1.0.2
  helm-release-remediation-retries:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.199185219Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: 963030821eb3c882cf23c8e1ff6da99e2431ecdfa127332d990f65cae676477c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-remediation-retries-1.0.3/helm-release-remediation-retries-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Remediation Retries
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-remediation-retries
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.261587082Z"
    description: HelmRelease remediation retries must be within the specified lower
      and upper bounds.
    digest: cb72f74468a487d65a2a202023b2ae380fdd8ec4cca8d2fbd9c32421449bd15b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-remediation-retries
    sources:
    - ghcr.io/kubewarden/policies/helm-release-remediation-retries:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-remediation-retries-1.0.2/helm-release-remediation-retries-1.0.2.tgz
    version: 1.0.2
  helm-release-rollback:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.328258866Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: 7f12dc19e79032b78521b1420aab0d2e1e2fa94996d13afb1118dec4567ac04d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-rollback-1.0.3/helm-release-rollback-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Rollback Should Be Disabled
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-rollback
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.379223656Z"
    description: The rollback feature of a HelmRelease should be disabled.
    digest: 4cd727a3b93b285e06cc697d8be2b65d48652caca890da1ad40d161f820e1b37
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-rollback
    sources:
    - ghcr.io/kubewarden/policies/helm-release-rollback:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-rollback-1.0.2/helm-release-rollback-1.0.2.tgz
    version: 1.0.2
  helm-release-service-account-name:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.428391073Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: ac54ceecd7cef7bdb73fa2fd7feaa449527180b3245c611031d8309535df5acb
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-service-account-name-1.0.3/helm-release-service-account-name-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Service Account Name
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-service-account-name
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.504986239Z"
    description: HelmRelease serviceAccountName must contain a value from parameters.service_account_names
    digest: 73da9c145136adeba0250280e3e284718280b72934dde302b30a15300e69cac3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-service-account-name
    sources:
    - ghcr.io/kubewarden/policies/helm-release-service-account-name:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-service-account-name-1.0.2/helm-release-service-account-name-1.0.2.tgz
    version: 1.0.2
  helm-release-storage-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.568924982Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: 4efa7de8ac305d9d9b1fe98ad4dd5b07638fa4262e24de3bcbd0604e11199c22
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-storage-namespace-1.0.3/helm-release-storage-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Storage Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-storage-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.591806228Z"
    description: HelmRelease storageNamespace must contain a value from storage_namespaces.
    digest: 208981565356d5935560b2f67ab9bee7abfe437a4f8524f4784c5aea02365cc4
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-storage-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-storage-namespace:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-storage-namespace-1.0.2/helm-release-storage-namespace-1.0.2.tgz
    version: 1.0.2
  helm-release-target-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.655444305Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: b13839017103515333a17353b8368b6ce29b984fa16acef214aedcc88e6e912b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-target-namespace-1.0.3/helm-release-target-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-target-namespace
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.71179972Z"
    description: HelmRelease targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 6ae12aa1832e2f1d40b8a82069aaa9de08183b53b5922bf7d90ff7cdc4887bd3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/helm-release-target-namespace:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-target-namespace-1.0.2/helm-release-target-namespace-1.0.2.tgz
    version: 1.0.2
  helm-release-values-from-configmaps:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.754345232Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: 5246d205d3e7bb45fc0719773f32dab2b4c9904e9569675defd544d24589a0da
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.3/helm-release-values-from-configmaps-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Release Values From
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-release-values-from-configmaps
      kubewarden/resources: HelmRelease
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.810990581Z"
    description: HelmRelease valuesFrom must use correctly configured ConfigMaps.
    digest: 0cd9e8e31bd8161f6ad3ad2599bf5fad3a60b9f7626ef38ac1e95eaa8ee8ab7c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-release-values-from-configmaps
    sources:
    - ghcr.io/kubewarden/policies/helm-release-values-from-configmaps:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-release-values-from-configmaps-1.0.2/helm-release-values-from-configmaps-1.0.2.tgz
    version: 1.0.2
  helm-repo-type:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.891415731Z"
    description: The type of a Helm repository should be OCI.
    digest: 6e354881342680ac63c66b25d86c554f00f740f9308a6b4411b7c9715d10d8e6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-repo-type-1.0.3/helm-repo-type-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo Type Should Be OCI
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-type
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:25.922933995Z"
    description: The type of a Helm repository should be OCI.
    digest: 8a9f18bf3c84dbb2e504dc0a770970ee238d741dfb63d0933166fe604101c3d3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-type
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-type:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-repo-type-1.0.2/helm-repo-type-1.0.2.tgz
    version: 1.0.2
  helm-repo-url:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:54.989270088Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: c478682eb1470f8ed9bad8ef8c4009f75cd79b89887ac04a199bf7f5bc36cc66
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-repo-url-1.0.3/helm-repo-url-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Helm Repo URL Should Be in Organisation Domain
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/helm-repo-url
      kubewarden/resources: HelmRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:26.028505963Z"
    description: The URL of a Helm repository should only be from the specified organisation
      domain.
    digest: 4fc024f7d7bf04f3bf42bb68041026506c56a25c6ff88868c1570cd8ba5055b6
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: helm-repo-url
    sources:
    - ghcr.io/kubewarden/policies/helm-repo-url:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/helm-repo-url-1.0.2/helm-repo-url-1.0.2.tgz
    version: 1.0.2
  host-namespaces-psp:
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:49.297050805Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: b0a554bbb28ece4d2e9d9ce5daf9d3f35dd09b1568a2204221d8f2fc349913aa
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/host-namespaces-psp-1.0.2/host-namespaces-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:55.088847405Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 2afba2c1d13dff589b5d5b30c0d662dd2e8f427c8ea1861a8960f37a939789c3
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/host-namespaces-psp-1.0.0/host-namespaces-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: host-namespaces-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Host Namespaces PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/host-namespaces-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-04-15T06:58:26.120440807Z"
    description: A Kubewarden policy that controls the usage of host namespaces
    digest: 455ca77655b34f585a8cbf3aa7fdb49a72562be4f4504100fcaf966207dcba8b
    home: https://github.com/kubewarden/host-namespaces-psp-policy
    keywords:
    - psp
    - container
    - network
    name: host-namespaces-psp
    sources:
    - ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/host-namespaces-psp-0.1.7/host-namespaces-psp-0.1.7.tgz
    version: 0.1.7
  hostpaths-psp:
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:49.402615647Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: ff5fa0e0d18e4eab1edb0332e8ab8a123caa16821ccc6c24434b4a70712172f0
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/hostpaths-psp-1.0.2/hostpaths-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:55.193231968Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: 36a7964e8e4ca1a179426a7660e97ccf6c5aefd8c17dd8fdb08de67be49a0c56
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/hostpaths-psp-1.0.0/hostpaths-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: hostpaths-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Hostpaths PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/hostpaths-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-04-15T06:58:26.238475755Z"
    description: A Pod Security Policy that controls usage of hostPath volumes
    digest: 56090b4186c32af042f968abd7df065c88b9a02b82b608cf31134d32f51d14ce
    home: https://github.com/kubewarden/hostpaths-psp-policy
    keywords:
    - psp
    - hostpaths
    - pod
    name: hostpaths-psp
    sources:
    - ghcr.io/kubewarden/policies/hostpaths-psp:v0.1.11
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/hostpaths-psp-0.1.11/hostpaths-psp-0.1.11.tgz
    version: 0.1.11
  ingress-policy:
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:49.530922338Z"
    description: Enforce requirements on Ingress resources
    digest: 591942411d9f73f8d643fd286ea8fe06432c61b629b6eed50e997bb5225c3825
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ingress-policy-1.0.2/ingress-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:55.289012862Z"
    description: Enforce requirements on Ingress resources
    digest: ab71afdde2665d5d37b0a85d6772cd512c5bdd105005b1462a2a28fb5030f170
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ingress-policy-1.0.0/ingress-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Ingress Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ingress
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.17
    apiVersion: v1
    appVersion: 0.1.17
    created: "2025-04-15T06:58:26.3649692Z"
    description: Enforce requirements on Ingress resources
    digest: c075e0d1c575ec79e82e08ffa08b950edec0d5322cceb18d49d4515341d6c695
    home: https://github.com/kubewarden/ingress-policy
    keywords:
    - ingress
    name: ingress-policy
    sources:
    - ghcr.io/kubewarden/policies/ingress:v0.1.17
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ingress-policy-0.1.17/ingress-policy-0.1.17.tgz
    version: 0.1.17
  ingress-unique-host:
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-01T20:20:49.64055759Z"
    description: Requires all Ingress rule hosts to be unique
    digest: ff2126ca8a7116cdb136c8ac38227986779b2cf76744da8861a9e0beb3f5a95d
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ingress-unique-host-1.0.3/ingress-unique-host-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: unique-ingress-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
      kubewarden/displayName: Unique Ingress host
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-ingress-policy
      kubewarden/resources: Ingress
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - ingresses
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-04-15T06:58:26.472747654Z"
    description: Requires all Ingress rule hosts to be unique
    digest: e1217984d6123e9ce7cdbf7369fb0ff5096574bf15e47a236aeb88bd40449a25
    home: https://github.com/kubewarden/unique-ingress-policy
    keywords:
    - ingress
    - kubewarden
    name: ingress-unique-host
    sources:
    - ghcr.io/kubewarden/policies/unique-ingress-policy:v0.1.5
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ingress-unique-host-0.1.5/ingress-unique-host-0.1.5.tgz
    version: 0.1.5
  istio-gateway-approved-hosts:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.410987328Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: c81b5cea566e36a0a4003a995d89ec12d0d4fc0f41d7333f121b3f267d626193
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.3/istio-gateway-approved-hosts-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Gateway Approved Hosts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-gateway-approved-hosts
      kubewarden/resources: Gateway
      kubewarden/rules: |
        - apiGroups:
          - networking.istio.io
          apiVersions:
          - v1
          resources:
          - gateways
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:26.627385768Z"
    description: '### Istio Gateway Approved Hosts This ensures you are only serving
      traffic for approved hostnames.  '
    digest: f88e64090f2ed725bf1aaa629288411fe6b6d0dcbd0824aa81fe8f3657ebe508
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-gateway-approved-hosts
    sources:
    - ghcr.io/kubewarden/policies/istio-gateway-approved-hosts:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/istio-gateway-approved-hosts-1.0.2/istio-gateway-approved-hosts-1.0.2.tgz
    version: 1.0.2
  istio-injected-namespaces:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.504196043Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 86cd0a824a8d2836ea5a1e44782de3747364a9322e6b9e4e095d4844b575720d
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/istio-injected-namespaces-1.0.3/istio-injected-namespaces-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Istio Injected Namespaces
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/istio-injected-namespaces
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:26.775317917Z"
    description: '# Istio-Injected Namespaces Specify namespaces you would like to
      be labeld with `istio-injected: enabled`. Namespaces with this label with automatically
      deploy a Istio sidecar with each pod.  '
    digest: 7c3a8d8502433182078b39d00a5279838b56ca09b7913ef39883b1b7ac95735d
    home: https://github.com/kubewarden/rego-policies-library
    name: istio-injected-namespaces
    sources:
    - ghcr.io/kubewarden/policies/istio-injected-namespaces:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/istio-injected-namespaces-1.0.2/istio-injected-namespaces-1.0.2.tgz
    version: 1.0.2
  kustomization-decryption-provider:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.606930681Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: 2ab25bd0d04432cb73cfacc1c70e806955599eca11cf1e5d73fb001fb8887c01
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-decryption-provider-1.0.3/kustomization-decryption-provider-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Decryption Provider
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-decryption-provider
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:26.866936265Z"
    description: Spec.decryption.provider must be set to one of decryption_providers.
    digest: 7965c316e9d0bf97035eee3e62647e444bfbc434b71216214357a29891a2605c
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-decryption-provider
    sources:
    - ghcr.io/kubewarden/policies/kustomization-decryption-provider:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-decryption-provider-1.0.2/kustomization-decryption-provider-1.0.2.tgz
    version: 1.0.2
  kustomization-excluded-paths:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.722690216Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: d2b4f3a59a85f1c59ed51b54d25df6ce6dc14790ef755b64476296b644a1adad
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-excluded-paths-1.0.3/kustomization-excluded-paths-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Excluded Paths
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-excluded-paths
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:26.956202249Z"
    description: spec.path cannot be one of excludedPathsList[]
    digest: a29bec77975116c30fdfe9eedc93a530a27946389d2dcde0ea9abb884e7510d5
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-excluded-paths
    sources:
    - ghcr.io/kubewarden/policies/kustomization-excluded-paths:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-excluded-paths-1.0.2/kustomization-excluded-paths-1.0.2.tgz
    version: 1.0.2
  kustomization-image-tag-standards:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.809615907Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: 34eabdaa22a55c082fb5be5e5d0079f57a695f62f39e652bc766249cea42317f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.3/kustomization-image-tag-standards-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Image Tag Standards
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-image-tag-standards
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.0469155Z"
    description: spec.Images must comply with image tag/semver reference standards.
    digest: cb14ddf86a9f9b07faaed5d6b849208fb0407a8c1b7d2f9c820f9ef59484c301
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-image-tag-standards
    sources:
    - ghcr.io/kubewarden/policies/kustomization-image-tag-standards:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-image-tag-standards-1.0.2/kustomization-image-tag-standards-1.0.2.tgz
    version: 1.0.2
  kustomization-images-requirement:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:55.902334541Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: 9df4dbb1acbf99ae158dce9ab2bceb030036108e29144fa6242f12323b5698ab
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-images-requirement-1.0.3/kustomization-images-requirement-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Images Requirement
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-images-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.190030072Z"
    description: The 'spec.images' field in a Kustomization object must be enabled
      or disabled based on the policy input images_required.
    digest: e6d080566516f4dfac823c79bde823bb368fcb263f829e60250ebf0e465ada29
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-images-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-images-requirement:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-images-requirement-1.0.2/kustomization-images-requirement-1.0.2.tgz
    version: 1.0.2
  kustomization-patches-requirement:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.014556333Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: 2abbd572d31235e44fda8309efd7544edb5228e2bdf2cd33327b3b70a49b50ad
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-patches-requirement-1.0.3/kustomization-patches-requirement-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Patches
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-patches-requirement
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.285435574Z"
    description: Kustomization patches should be enabled or disabled based on input.
    digest: d818dc88a0887b9d30df3d34de4ecf60c3fb0943d718e7ddad2dc11e82639e9f
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-patches-requirement
    sources:
    - ghcr.io/kubewarden/policies/kustomization-patches-requirement:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-patches-requirement-1.0.2/kustomization-patches-requirement-1.0.2.tgz
    version: 1.0.2
  kustomization-prune:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.111759059Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: 124a2f29f1deeba5541ed21db5c7b3e332f7709a4558a706b417bef83e4598da
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-prune-1.0.3/kustomization-prune-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Prune
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-prune
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.402111274Z"
    description: The 'spec.prune' field in the Kustomization object must be set according
      to the input parameter 'prune'.
    digest: 2db246332b32b85d004cf5252f44595998ead504194e1fc9170979c9be4f7c8d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-prune
    sources:
    - ghcr.io/kubewarden/policies/kustomization-prune:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-prune-1.0.2/kustomization-prune-1.0.2.tgz
    version: 1.0.2
  kustomization-target-namespace:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.204506218Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 29240319425e5b3ab390d7ec9d7c44851e8f159c8ea9f57a6bf43069bf1923d3
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-target-namespace-1.0.3/kustomization-target-namespace-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Target Namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-target-namespace
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.533295045Z"
    description: Kustomization targetNamespace must be one of the allowed targetNamespace
      list.
    digest: 689749c9f76bb1e41aad789f227bcc2dc74fdda8c3736a1d1c0e58061ad1cf46
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-target-namespace
    sources:
    - ghcr.io/kubewarden/policies/kustomization-target-namespace:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-target-namespace-1.0.2/kustomization-target-namespace-1.0.2.tgz
    version: 1.0.2
  kustomization-var-substitution:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.298173964Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: bf06eb776b9fda30e0bef886346e0922de07d43335eee4641b09dae4ab15a1a5
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-var-substitution-1.0.3/kustomization-var-substitution-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Kustomization Var Substitution
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/kustomization-var-substitution
      kubewarden/resources: Kustomization
      kubewarden/rules: |
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.63471368Z"
    description: The property 'spec.postBuild.substitute.var_substitution_enabled'
      must be disabled.
    digest: afea8a4e075d018ded4ef19faef5308727441c7a9e948faa66da94bf3d61d726
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: kustomization-var-substitution
    sources:
    - ghcr.io/kubewarden/policies/kustomization-var-substitution:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/kustomization-var-substitution-1.0.2/kustomization-var-substitution-1.0.2.tgz
    version: 1.0.2
  metadata-missing-label-and-value:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.419053421Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: e912e8dd458e6bbbed19cd257bec136fc38ee8f152f8a0a3ebcc2bb31fd1013c
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.3/metadata-missing-label-and-value-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Metadata Missing Label And Value
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/metadata-missing-label-and-value
      kubewarden/resources: DaemonSet, Deployment, Job, StatefulSet
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - daemonsets
          - deployments
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.748949603Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensures a key and value are set in the entity''s
      `metadata.labels` path. The Policy detects the presence of the following:   ###
      label A label key of your choosing.   ### value A label value of your choosing. '
    digest: 0d4a62f2931b97773674a00e4c1c66195f5914dd6f38058225f5844e7b87395a
    home: https://github.com/kubewarden/rego-policies-library
    name: metadata-missing-label-and-value
    sources:
    - ghcr.io/kubewarden/policies/metadata-missing-label-and-value:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/metadata-missing-label-and-value-1.0.2/metadata-missing-label-and-value-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-component-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.788358236Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 2be27b90dc46178da662283864c3f9479f1c280e9016ee8d379ea02813d945b6
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.3/missing-kubernetes-app-component-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Component Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-component-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.843475794Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 92902613f7aa8e1e4e67e94125a65f104183c4a378806994497c80cccada169a
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-component-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-component-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-component-label-1.0.2/missing-kubernetes-app-component-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-created-by-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.878218518Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 8c7677368613c03f771daed44375d2896924b78b84cc341d664f1c3c0dae3269
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.3/missing-kubernetes-app-created-by-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Created By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-created-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:27.939825016Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: f7541a45c79287f30f3368ffd9c60926a803ce16a6ccffb156ecbc216c00b48d
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-created-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-created-by-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-created-by-label-1.0.2/missing-kubernetes-app-created-by-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-instance-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:56.986676995Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 5f4c23f8d53e312285fe9231c485ba03e52a4a974dfac4b2324b46f61fddb0b1
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.3/missing-kubernetes-app-instance-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Instance Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-instance-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.032279353Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: b972d1bb8b332e6e7c6c532c8112a8858abeb336b8f0fe3be71333146696b730
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-instance-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-instance-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-instance-label-1.0.2/missing-kubernetes-app-instance-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.12393947Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 9562059e38822e74c4ab9dc94cb4294f6b6a2f942ab29445dd45e471608cf12f
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.3/missing-kubernetes-app-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.125679876Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource '
    digest: 0892cb2c852c4705ac8ebc465026e0ff566018b90c2ac1fccd79f49fa2b56731
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-label-1.0.2/missing-kubernetes-app-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-managed-by-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.219199595Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: a1d8da8ef59cc235365ca660f39b72ad30421ae1ae5bdffa8e1b3f69daa8f30e
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.3/missing-kubernetes-app-managed-by-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Managed By Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-managed-by-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.223569161Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 5a995809aef6e04ecc546442dd0b71461a1fb3d3b76440341d8d8ef6555c6674
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-managed-by-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-managed-by-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-managed-by-label-1.0.2/missing-kubernetes-app-managed-by-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-part-of-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.314833067Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: ffeb3804d580bacbf80236d689d2619df7b73400d3f067d7658a9f0805d44b4f
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.3/missing-kubernetes-app-part-of-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Part Of Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-part-of-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.337039732Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 0c9db3cc80d991e9fa1bb39736b46efae40900d1c75b0767e0cbfe1d8c42ba23
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-part-of-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-part-of-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-part-of-label-1.0.2/missing-kubernetes-app-part-of-label-1.0.2.tgz
    version: 1.0.2
  missing-kubernetes-app-version-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.413442858Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 6d8fd4eeebf1cc2f28cac9428240e3dd5ec365d62289412911659581af0984e8
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.3/missing-kubernetes-app-version-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Kubernetes App Version Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-kubernetes-app-version-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.468263401Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: b10730ac309e72bce5190eea24391ef87d70ed244727997b80a8d87d90264e66
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-kubernetes-app-version-label
    sources:
    - ghcr.io/kubewarden/policies/missing-kubernetes-app-version-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-kubernetes-app-version-label-1.0.2/missing-kubernetes-app-version-label-1.0.2.tgz
    version: 1.0.2
  missing-owner-label:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.496717049Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 62ab5a2b558bede03fb282ad509d71a97f00282b5ab0e7a02cb032b8f757a63d
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-owner-label-1.0.3/missing-owner-label-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Missing Owner Label
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/missing-owner-label
      kubewarden/resources: Deployment, Job, ReplicationController, ReplicaSet, DaemonSet,
        StatefulSet, CronJob
      kubewarden/rules: |
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - daemonsets
          - statefulsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.551010111Z"
    description: 'Custom labels can help enforce organizational standards for each
      artifact deployed. This Policy ensure a custom label key is set in the entity''s
      `metadata`. The Policy detects the presence of the following:   ### owner A
      label key of `owner` will help identify who the owner of this entity is.   ###
      app.kubernetes.io/name The name of the application   ### app.kubernetes.io/instance
      A unique name identifying the instance of an application     ### app.kubernetes.io/version
      The current version of the application (e.g., a semantic version, revision hash,
      etc.)  ### app.kubernetes.io/part-of The name of a higher level application
      this one is part of   ### app.kubernetes.io/managed-by The tool being used to
      manage the operation of an application   ### app.kubernetes.io/created-by The
      controller/user who created this resource  '
    digest: 13f8e0dd26d9d5a7f6029b54a5a7bb999163c8014e6f4917df146d7a0325c73e
    home: https://github.com/kubewarden/rego-policies-library
    name: missing-owner-label
    sources:
    - ghcr.io/kubewarden/policies/missing-owner-label:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/missing-owner-label-1.0.2/missing-owner-label-1.0.2.tgz
    version: 1.0.2
  namespace-label-propagator-policy:
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:52.028507126Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: ed59e51f0df2e5fd8bbb3eccdf07cedf8d8301fa53be633b6ee6c1425b471899
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.2/namespace-label-propagator-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:57.599477082Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: 9418e701af4ed02ffc27a0d32ab973991bbdd1cce80460bd4283d22ac26ad8d0
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-label-propagator-policy-1.0.0/namespace-label-propagator-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: namespace-label-propagator-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Namespace
      kubewarden/displayName: Namespace label propagator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-label-propagator
      kubewarden/resources: Pod, ReplicationController, Deployment, ReplicaSet, StatefulSet,
        DaemonSet, Job, CronJob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.5
    apiVersion: v1
    appVersion: 0.1.5
    created: "2025-04-15T06:58:28.655754353Z"
    description: Kubewarden policy designed to automatically propagate labels defined
      in a Kubernetes namespace to the associated resources within that namespace
    digest: a3a2b80848d43c52c4ae153cc6aac1ba8f86afd87282689c58a0573a80077623
    home: https://github.com/kubewarden/namespace-label-propagator-policy
    keywords:
    - policy
    - kubewarden
    - namespace
    - label
    name: namespace-label-propagator-policy
    sources:
    - ghcr.io/kubewarden/policies/namespace-label-propagator:v0.1.5
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-label-propagator-policy-0.1.5/namespace-label-propagator-policy-0.1.5.tgz
    version: 0.1.5
  namespace-pod-quota:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.709110532Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: 395e6341f1ec474d0586bade08721feedacd2f40ba24798b09b4eb1879d29234
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-pod-quota-1.0.3/namespace-pod-quota-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Pod Quota
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-pod-quota
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.777921472Z"
    description: 'When using a pod quota ensure setting the proper value for the quantity
      of pods you wish to have in your namespace.  '
    digest: 2eb262cee1ed200a9d2a9bab41638d43da1c69458628b2b2aa544a3794682bca
    home: https://github.com/kubewarden/rego-policies-library
    name: namespace-pod-quota
    sources:
    - ghcr.io/kubewarden/policies/namespace-pod-quota:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-pod-quota-1.0.2/namespace-pod-quota-1.0.2.tgz
    version: 1.0.2
  namespace-resources-limitrange:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:57.832501949Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: a6df0a26f1bcd5e0d75ba44c7060cbeff13e1cde8a7c6deaf1abf76b7d4eb4cd
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-resources-limitrange-1.0.3/namespace-resources-limitrange-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Namespace Resources Limitrange
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/namespace-resources-limitrange
      kubewarden/resources: LimitRange
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - limitranges
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.887648044Z"
    description: 'When setting up default CPU and Memory values for your namespace,
      this policy will check if both requests and limits are set. This policy checks
      for the following:  | Resource Setting | Resource Type  | |---|---| |  default
      | cpu  | |  default  | memory  | |  defaultRequest |  cpu | |  defaultRequest
      | memory  | |  min | memory  | |  min | cpu  | |  max | cpu | |  max | memory  | '
    digest: 23be4b77073ca2d5558f128429c59bab1c6fb1ca2e14822226e8a0fd6c8b4e12
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: namespace-resources-limitrange
    sources:
    - ghcr.io/kubewarden/policies/namespace-resources-limitrange:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/namespace-resources-limitrange-1.0.2/namespace-resources-limitrange-1.0.2.tgz
    version: 1.0.2
  network-allow-egress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.01384834Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: 3361059cd226a27898460490b6ad05fbdaaecb413c1f8a69bd549e7ff7305390
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.3/network-allow-egress-traffic-from-namespace-to-another-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Egress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:28.989288058Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Egress traffic from one namespace to another.  By default,
      if no policies exist in a namespace, then all ingress and egress traffic is
      allowed to and from pods in that namespace.  '
    digest: a75cb002ebfac8b1547802493c70f61561ae035fe6e5f66bbdc77c2ba2e74181
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-egress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-egress-traffic-from-namespace-to-another:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-allow-egress-traffic-from-namespace-to-another-1.0.2/network-allow-egress-traffic-from-namespace-to-another-1.0.2.tgz
    version: 1.0.2
  network-allow-ingress-traffic-from-namespace-to-another:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.14770175Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: ec1913f4de8667367c7cbeccf5b83181b6d70294d5c458fe4e6122ecd37c9171
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.3/network-allow-ingress-traffic-from-namespace-to-another-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Allow Ingress Traffic From Namespace To Another
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.104047512Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to allow Ingress traffic from one namespace to another.  By
      default, if no policies exist in a namespace, then all ingress and egress traffic
      is allowed to and from pods in that namespace.  '
    digest: 6a5093e1c260061853d67991a58247f8bdec35b391cd2ebf2abec9afdf497aa7
    home: https://github.com/kubewarden/rego-policies-library
    name: network-allow-ingress-traffic-from-namespace-to-another
    sources:
    - ghcr.io/kubewarden/policies/network-allow-ingress-traffic-from-namespace-to-another:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-allow-ingress-traffic-from-namespace-to-another-1.0.2/network-allow-ingress-traffic-from-namespace-to-another-1.0.2.tgz
    version: 1.0.2
  network-block-all-ingress-traffic-to-namespace-from-cidr-block:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.240993558Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: d3d62537fd0def5da6bc34510205d71b6b52e0e819cb6ddab98710162b99075f
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.3/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Network Block All Ingress Traffic To Namespace From
        CIDR Block
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block
      kubewarden/resources: NetworkPolicy
      kubewarden/rules: |
        - apiGroups:
          - networking.k8s.io
          apiVersions:
          - v1
          resources:
          - networkpolicies
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.196530013Z"
    description: 'If you are using a CNI that allows for Network Policies, you can
      use this Policy to block all Egress traffic from a specified namespace to a
      CIDR block of IP addresses.   By default, if no policies exist in a namespace,
      then all ingress and egress traffic is allowed to and from pods in that namespace.  '
    digest: 14f5d0a1b7cd05f626857cd8b75189e91c0271590ee93ae90790b9795adebaec
    home: https://github.com/kubewarden/rego-policies-library
    name: network-block-all-ingress-traffic-to-namespace-from-cidr-block
    sources:
    - ghcr.io/kubewarden/policies/network-block-all-ingress-traffic-to-namespace-from-cidr-block:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.2/network-block-all-ingress-traffic-to-namespace-from-cidr-block-1.0.2.tgz
    version: 1.0.2
  ocirepository-cosign-verification:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.35258398Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 0896093be835bbb101f28ffbc77c5fec0c3d880a25909f90184d1c2ae42cfe75
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.3/ocirepository-cosign-verification-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Cosign Verification
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-cosign-verification
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.29436344Z"
    description: OCIRepository resources must provide Cosign verification and reference
      a specific key.
    digest: 8926bdc3a6034e15878ff77ebe0951bf5d91c825721195394a20f5ac2b94f8d1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-cosign-verification
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-cosign-verification:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-cosign-verification-1.0.2/ocirepository-cosign-verification-1.0.2.tgz
    version: 1.0.2
  ocirepository-ignore-suffixes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.474520648Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: d5c5a1bdd1cc16ab47083c1e7a7b69249bb475aab7198c0f75b11bfce655a8e9
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.3/ocirepository-ignore-suffixes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Ignore Suffixes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-ignore-suffixes
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.419474925Z"
    description: OCIRepository resources must include specific suffixes in the spec.ignore
      field which determines the files to be ignored before making a commit..
    digest: 5d2cefdc8731a56725a6db88fd587b1e972be7faaf8731bb562f80e3de09e230
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    - oci
    - suffixes
    name: ocirepository-ignore-suffixes
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-ignore-suffixes:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-ignore-suffixes-1.0.2/ocirepository-ignore-suffixes-1.0.2.tgz
    version: 1.0.2
  ocirepository-layer-selector:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.599646304Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 34ee16a638b159a68261224c945d37e92ad95c16e77aa8fc1ac256c03840054d
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-layer-selector-1.0.3/ocirepository-layer-selector-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Layer Selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-layer-selector
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.508140888Z"
    description: OCIRepository layer selector must only reference predefined media/operation
      type.
    digest: 63a94fb9bcafad4644fb27a65f09410d2688d6e5b87b7b44f278b741b80cdb43
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-layer-selector
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-layer-selector:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-layer-selector-1.0.2/ocirepository-layer-selector-1.0.2.tgz
    version: 1.0.2
  ocirepository-not-latest:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.687816365Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 93a378e790dea430ef057e4b49b2b56a076627a5b4e7889dfed23d14c07560a7
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-not-latest-1.0.3/ocirepository-not-latest-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Not Latest Tag
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-not-latest
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.615390796Z"
    description: OCIRepository resources must not use 'latest' as a tag reference.
    digest: 1d5c361835f6e8824bd2b925f29836f11c6a55b6ac221a4ec81800079bd13465
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-not-latest
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-not-latest:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-not-latest-1.0.2/ocirepository-not-latest-1.0.2.tgz
    version: 1.0.2
  ocirepository-organization-domains:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.789683492Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: 8e99e0ef16a3016677c1c7d49d9294d56a128b685d98bc8c8f66c6caf6de23c1
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-organization-domains-1.0.3/ocirepository-organization-domains-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Organization Domains
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-organization-domains
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.721806354Z"
    description: OCIRepository resources must only be from allowed organization domains.
    digest: 9ac30075da9d2e997beb78df829257fb0df1eb96632752dccd1f3b3770d4030b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-organization-domains
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-organization-domains:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-organization-domains-1.0.2/ocirepository-organization-domains-1.0.2.tgz
    version: 1.0.2
  ocirepository-patch-annotation:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:58.921054289Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: 087e58bc3ee46b709e0b684cb310bbc1c404bbc1d7b46d8dfcc0b985919c58f0
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.3/ocirepository-patch-annotation-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: OCIRepository Patch Annotation
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/ocirepository-patch-annotation
      kubewarden/resources: OCIRepository
      kubewarden/rules: |
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1beta2
          resources:
          - ocirepositories
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.849775856Z"
    description: OCIRepository resources must have a patch annotation that matches
      the provider.
    digest: 006f7ddb59bc1959bfd84a2dd6dbb9a7c93d01f039337fd6f9bb43e243a2d9ff
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: ocirepository-patch-annotation
    sources:
    - ghcr.io/kubewarden/policies/ocirepository-patch-annotation:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/ocirepository-patch-annotation-1.0.2/ocirepository-patch-annotation-1.0.2.tgz
    version: 1.0.2
  persistent-volume-access-modes:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:59.02840845Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: 8a2d32f4a23bc127f284f192adfd96fe02b910c98384e823959ec5e6abbad616
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistent-volume-access-modes-1.0.3/persistent-volume-access-modes-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Access Modes
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-access-modes
      kubewarden/resources: PersistentVolume
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumes
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:29.936312974Z"
    description: 'A PersistentVolume can be mounted on a host in any way supported
      by the resource provider. As shown in the table below, providers will have different
      capabilities and each PV''s access modes are set to the specific modes supported
      by that particular volume. For example, NFS can support multiple read/write
      clients, but a specific NFS PV might be exported on the server as read-only.
      Each PV gets its own set of access modes describing that specific PV''s capabilities.  The
      access modes are:  * ReadWriteOnce * ReadOnlyMany * ReadWriteMany * ReadWriteOncePod '
    digest: 1a061b8f19f2be60b6c7b0f7294da72631901d87b96092714abe3cf70f4ff187
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-access-modes
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-access-modes:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistent-volume-access-modes-1.0.2/persistent-volume-access-modes-1.0.2.tgz
    version: 1.0.2
  persistent-volume-claim-snapshot:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:59.112754361Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: adbcda3b80edfda643677923a72c144f9c143a464bcd55bf87aebbc614fe6e52
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.3/persistent-volume-claim-snapshot-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Persistent Volume Claim Snapshot
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistent-volume-claim-snapshot
      kubewarden/resources: VolumeSnapshot
      kubewarden/rules: |
        - apiGroups:
          - snapshot.storage.k8s.io
          apiVersions:
          - v1
          resources:
          - volumesnapshots
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:30.054747752Z"
    description: 'This Policy checks for a PVC Snapshot.  '
    digest: 622cccdab1a9d5d18451e131991e020382db1e9fd82dd5a42d1b381832468c1d
    home: https://github.com/kubewarden/rego-policies-library
    name: persistent-volume-claim-snapshot
    sources:
    - ghcr.io/kubewarden/policies/persistent-volume-claim-snapshot:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistent-volume-claim-snapshot-1.0.2/persistent-volume-claim-snapshot-1.0.2.tgz
    version: 1.0.2
  persistentvolumeclaim-storageclass-policy:
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:53.678255Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: 8edc83c2b91e1f67fbcd9f2106444ab48463512b79869cb5d8e102d9072c38fc
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.2/persistentvolumeclaim-storageclass-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.201828771Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: 47b2f455f80b9cf6c8851bdbcdc4eff287fd010eb322b49e2dec5f6436b0361e
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-1.0.0/persistentvolumeclaim-storageclass-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pvc-storageclass-validator
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PVC StorageClass Validator
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/persistentvolumeclaim-storageclass-policy
      kubewarden/resources: PersistentVolumeClaim
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - persistentvolumeclaims
          operations:
          - CREATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-04-15T06:58:30.190144491Z"
    description: Policy that validates and adjusts the usage of StorageClasses in
      PersistentVolumeClaims
    digest: 4e9ab761013a4c2ac242be6b2d60e150fb2ead63c8c3b47fb609ccd78e06cd69
    home: https://github.com/kubewarden/persistentvolumeclaim-storageclass-policy
    keywords:
    - persistentvolumeclaim
    - pvc
    - kubewarden
    name: persistentvolumeclaim-storageclass-policy
    sources:
    - ghcr.io/kubewarden/policies/persistentvolumeclaim-storageclass-policy:v0.1.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/persistentvolumeclaim-storageclass-policy-0.1.1/persistentvolumeclaim-storageclass-policy-0.1.1.tgz
    version: 0.1.1
  pod-ndots:
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:53.764933086Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: 434d3e14de79841c65128774991fdf423337cd76dfd4c3bc5d4a189a1d4338a4
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-ndots-1.0.2/pod-ndots-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.302825313Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: 462f62fb6be06d1a1edcf7c9faedfbe2fb7e727549c4be71de287310a200c85f
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-ndots-1.0.0/pod-ndots-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-ndots-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod ndots
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-ndots
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-04-15T06:58:30.27936544Z"
    description: Enforce a minimum value for the ndots option in the resolv.conf file
      of a Pod.
    digest: f78c2425fa5c8b61555a92e169bcdd594323e3d554640f6f2c3d07fd2d1acf83
    home: https://github.com/kubewarden/pod-ndots
    keywords:
    - pod
    name: pod-ndots
    sources:
    - ghcr.io/kubewarden/policies/pod-ndots:v0.1.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-ndots-0.1.1/pod-ndots-0.1.1.tgz
    version: 0.1.1
  pod-privileged-policy:
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:53.876173408Z"
    description: Limit the ability to create privileged containers
    digest: 73d780fef96ffee77c86e719012aa2458461ebef80ad2b0749bb49344bcb5947
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-privileged-policy-1.0.2/pod-privileged-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.385928636Z"
    description: Limit the ability to create privileged containers
    digest: f65ea509ffcb621df7e1fe4ca240515ac7c72efcecd95181cba805a343cdf392
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-privileged-policy-1.0.0/pod-privileged-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-privileged-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Privileged Policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-privileged
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.4
    apiVersion: v1
    appVersion: 0.3.4
    created: "2025-04-15T06:58:30.389925835Z"
    description: Limit the ability to create privileged containers
    digest: a251ab8a3ff51606551b3f6f2d97438690ebfb328f2f05df7227b189914becfc
    home: https://github.com/kubewarden/pod-privileged-policy
    keywords:
    - psp
    - pod
    - container
    - privileged
    name: pod-privileged-policy
    sources:
    - ghcr.io/kubewarden/policies/pod-privileged:v0.3.4
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-privileged-policy-0.3.4/pod-privileged-policy-0.3.4.tgz
    version: 0.3.4
  pod-runtime:
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:54.07881131Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: d12c473251a77184bf7e720f247a3b808364196ace7c4f426b3ef2df53f7853c
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-runtime-1.0.2/pod-runtime-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.566502122Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: 6bb7e350707156f695c75523830c942e61e7e1b9b01a82f579f1c6bf52113db8
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-runtime-1.0.0/pod-runtime-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: pod-runtime
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Pod Runtime
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/pod-runtime
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.2
    apiVersion: v1
    appVersion: 0.2.2
    created: "2025-04-15T06:58:30.503035969Z"
    description: Policy that controls the usage of Pod runtimeClass
    digest: f4be6c29d39e8dd194d669c1df3c20562d4b4cb20b598f450f5d7fcd1eefe274
    home: https://github.com/kubewarden/pod-runtime-class-policy
    keywords:
    - pod
    - runtime
    - container runtime
    name: pod-runtime
    sources:
    - ghcr.io/kubewarden/policies/pod-runtime:v0.2.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/pod-runtime-0.2.2/pod-runtime-0.2.2.tgz
    version: 0.2.2
  priority-class-policy:
  - annotations:
      artifacthub.io/repository: priority-class-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Priority class policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/priority-class-policy
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-01T20:20:54.204925791Z"
    description: Validates Pod's priority class
    digest: 5792c7bbeae4743ac3e436c0ea7f4a5554e6c7862dfd9329c73d79e48d9bf7ca
    home: https://github.com/kubewarden/priority-class-policy
    keywords:
    - pod
    - priority-class
    name: priority-class-policy
    sources:
    - ghcr.io/kubewarden/policies/priority-class-policy:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/priority-class-policy-1.0.3/priority-class-policy-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: priority-class-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Priority class policy
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/priority-class-policy
      kubewarden/resources: Pod, Replicationcontroller, Deployments, Replicaset, Statefulset,
        Daemonset, Job, Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.659532762Z"
    description: Validates Pod's priority class
    digest: cd1189568228f5eda9937ab35e91cbadcb0d58f967bb2c5d2780af4497fc13d2
    home: https://github.com/kubewarden/priority-class-policy
    keywords:
    - pod
    - priority-class
    name: priority-class-policy
    sources:
    - ghcr.io/kubewarden/policies/priority-class-policy:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/priority-class-policy-1.0.0/priority-class-policy-1.0.0.tgz
    version: 1.0.0
  psa-label-enforcer:
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-01T20:20:54.324947303Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: 300a60b4c8589189ccbc100b12d5a176bb42dee3e3cab0d1ac68c8e1c3a830ac
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psa-label-enforcer-1.0.3/psa-label-enforcer-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.772186045Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: d45369096fbd1f22d3cfa52de0447a39d675894dce41b56a8968d8d21589acd4
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psa-label-enforcer-1.0.0/psa-label-enforcer-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: psa-label-enforcer
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: PSA Label Enforcer
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/psa-label-enforcer
      kubewarden/resources: Namespace
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - namespaces
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.3
    apiVersion: v1
    appVersion: 0.1.3
    created: "2025-04-15T06:58:30.591184565Z"
    description: Policy to ensure that namespaces have the required PSA labels configuration
      for deployment in the cluster.
    digest: c47b5585d7f9fc9dbf4f1b46e45a25d1c4eb78d9c13fb04744b6518f8580d626
    home: https://github.com/kubewarden/psa-label-enforcer
    keywords:
    - namespace
    - psa
    - kubewarden
    name: psa-label-enforcer
    sources:
    - ghcr.io/kubewarden/policies/psa-label-enforcer:v0.1.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psa-label-enforcer-0.1.3/psa-label-enforcer-0.1.3.tgz
    version: 0.1.3
  psp-apparmor:
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:54.473553535Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 6b3eac9d47536a1c6b144bd0d65d5edecede45d62c7d57e742e38d0d38c419d3
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psp-apparmor-1.0.2/psp-apparmor-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:28:59.883493334Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: 1fdf587b1c85d0c81424898853d9e17c7eb383b9b6d6a06e0b46f64b0274f9f2
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psp-apparmor-1.0.0/psp-apparmor-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: apparmor-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Apparmor PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/apparmor-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.13
    apiVersion: v1
    appVersion: 0.1.13
    created: "2025-04-15T06:58:30.726609341Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of AppArmor profiles
    digest: d4f6ec54f7ef0e7a4f9c939dee109c84d6a4b366343ce389b773568234fe88b0
    home: https://github.com/kubewarden/apparmor-psp-policy
    keywords:
    - psp
    - apparmor
    name: psp-apparmor
    sources:
    - ghcr.io/kubewarden/policies/apparmor-psp:v0.1.13
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/psp-apparmor-0.1.13/psp-apparmor-0.1.13.tgz
    version: 0.1.13
  rbac-prohibit-list-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:28:59.981233288Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 808bca759cdd36acda5642e43d99cbebce2fb9d92601c0905ffc55175dce40af
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.3/rbac-prohibit-list-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit List On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-list-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:30.851587054Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''list'' verb on ''secrets'' resource. '
    digest: 83dd2bb22b1ee369e42ef49341e2402d3ad4ab4e7f8c699f1e9cd8330f75a8a7
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-list-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-list-secrets:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-list-secrets-1.0.2/rbac-prohibit-list-secrets-1.0.2.tgz
    version: 1.0.2
  rbac-prohibit-watch-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.092288369Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 3d50f1d664f4e40e07540e4e6380cc8ab00f365739b30952df47c19e5834f725
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.3/rbac-prohibit-watch-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Watch On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-watch-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:30.95871283Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''watch'' verb on ''secrets'' resource. '
    digest: 4f34d984c8984c98bb78124d09505664165f1fba3b857c029bd4b5e4876894a4
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-watch-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-watch-secrets:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-watch-secrets-1.0.2/rbac-prohibit-watch-secrets-1.0.2.tgz
    version: 1.0.2
  rbac-prohibit-wildcard-secrets:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.249119226Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: bbce03706b6e2a19670e25f661dbfd709d90077edefe47b86932e720d75eebfd
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.3/rbac-prohibit-wildcard-secrets-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcard On Secrets
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcard-secrets
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.068440975Z"
    description: 'This Policy will violate if any RBAC ClusterRoles or Roles are designated
      with ''wildcard'' verb on ''secrets'' resource. '
    digest: 4555219dbac357640a974c64e8ad661f87ce2831e89bf96eed4ffb1f0baf4f48
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcard-secrets
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcard-secrets:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcard-secrets-1.0.2/rbac-prohibit-wildcard-secrets-1.0.2.tgz
    version: 1.0.2
  rbac-prohibit-wildcards-policyrule-resources:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.440792649Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: ea58d59a1d7a5b33fb3bc6ae722ee8ac5570dd8481c312a59d7db715d0a18ade
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.3/rbac-prohibit-wildcards-policyrule-resources-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Resources
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.207208983Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 8b75e06cfbc70692fe82becc1379978f416b000110ea675b0d30da2b602606c1
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-resources
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-resources:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-resources-1.0.2/rbac-prohibit-wildcards-policyrule-resources-1.0.2.tgz
    version: 1.0.2
  rbac-prohibit-wildcards-policyrule-verbs:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.578117951Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: 036af80fb37230f20cd0506c969548d48a3e63b690815739dea2f4da28d7becf
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.3/rbac-prohibit-wildcards-policyrule-verbs-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Rbac Prohibit Wildcards on Policy Rule Verbs
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs
      kubewarden/resources: Role, ClusterRole
      kubewarden/rules: |
        - apiGroups:
          - rbac.authorization.k8s.io
          apiVersions:
          - v1
          resources:
          - roles
          - clusterroles
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.330331939Z"
    description: 'This Policy prohibits various resources from being set with wildcards
      for Role or ClusterRole resources, except for the `cluster-admin` ClusterRole.
      It will check each resource specified for the verb specified. The wildcards
      will be checked in:  ### Resources In the Kubernetes API, most resources are
      represented and accessed using a string representation of their object name,
      such as pods for a Pod. RBAC refers to resources using exactly the same name
      that appears in the URL for the relevant API endpoint.   ### Verbs API verbs
      like get, list, create, update, patch, watch, delete, and deletecollection are
      used for resource requests.   ### API Groups The API Group being accessed (for
      resource requests only).  ### Non Resource URLs Requests to endpoints other
      than /api/v1/... or /apis/<group>/<version>/... are considered "non-resource
      requests", and use the lower-cased HTTP method of the request as the verb. '
    digest: c9907f411348d3f81ba355a22e1007e5875add9910cc73518a916c2de1f0908c
    home: https://github.com/kubewarden/rego-policies-library
    name: rbac-prohibit-wildcards-policyrule-verbs
    sources:
    - ghcr.io/kubewarden/policies/rbac-prohibit-wildcards-policyrule-verbs:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/rbac-prohibit-wildcards-policyrule-verbs-1.0.2/rbac-prohibit-wildcards-policyrule-verbs-1.0.2.tgz
    version: 1.0.2
  readonly-root-filesystem-psp:
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:00.675476261Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 38b40952a8638922a3435201043dde669dcc11eb006da3b35050970eb6539790
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/readonly-root-filesystem-psp-1.0.0/readonly-root-filesystem-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: readonly-root-filesystem-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Readonly Root Filesystem PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/readonly-root-filesystem-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.6
    apiVersion: v1
    appVersion: 0.1.6
    created: "2025-04-15T06:58:31.453449724Z"
    description: A Kubewarden policy that enforces root filesystem to be readonly
    digest: 263b428cad9aeff16eb3276087ff15415243902d8a36cf525c5cb71bf199e053
    home: https://github.com/kubewarden/readonly-root-filesystem-psp-policy
    keywords:
    - psp
    - container
    - filesystem
    - volume
    name: readonly-root-filesystem-psp
    sources:
    - ghcr.io/kubewarden/policies/readonly-root-filesystem-psp:v0.1.6
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/readonly-root-filesystem-psp-0.1.6/readonly-root-filesystem-psp-0.1.6.tgz
    version: 0.1.6
  resource-quota-setting-is-missing:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.819266278Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: 40cf3a486ddfa2462d121f4868a4281c69dae8310d4f001843480579a69b353b
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.3/resource-quota-setting-is-missing-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Quota Setting Is Missing
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-quota-setting-is-missing
      kubewarden/resources: ResourceQuota
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - resourcequotas
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.547058211Z"
    description: 'When creating resource quotas per namespace, ensure CPU and Memory
      requests and limits are set. '
    digest: fd69fc5f629d5413a82a08efe68d0eb352097f4eeaceb26fcfb6fdf6838af8ad
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - soc2-type1
    name: resource-quota-setting-is-missing
    sources:
    - ghcr.io/kubewarden/policies/resource-quota-setting-is-missing:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-quota-setting-is-missing-1.0.2/resource-quota-setting-is-missing-1.0.2.tgz
    version: 1.0.2
  resource-reconcile-interval:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.4
    apiVersion: v1
    appVersion: 1.0.4
    created: "2025-07-01T20:45:09.713166322Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 4f3ee8926fe7476152084c9443d23550221f78e095bf12bfe4869196abe36804
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.4
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-reconcile-interval-1.0.4/resource-reconcile-interval-1.0.4.tgz
    version: 1.0.4
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:00.927965834Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 9a59583ab41bd259ba517a7be8d368d13a11a95b6bc5c04fab4141d9ee722054
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-reconcile-interval-1.0.3/resource-reconcile-interval-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Reconcile Interval Must Be Set Between Lower
        and Upper Bound
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-reconcile-interval
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.65468187Z"
    description: The reconcile interval of a Resource must be set between a lower
      and upper bound, lower_bound & upper_bound must be in seconds .
    digest: 48bec6978c5a85a7b6fbcd677329a392330a2e8d8f6ddd2097a3393175abca55
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-reconcile-interval
    sources:
    - ghcr.io/kubewarden/policies/resource-reconcile-interval:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-reconcile-interval-1.0.2/resource-reconcile-interval-1.0.2.tgz
    version: 1.0.2
  resource-suspend-waiver:
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-05-05T10:29:01.049852834Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: c5853b1a40f59d7619947db42d0e2b673d18c5db4a61bd9dd9365f5ea8c41985
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-suspend-waiver-1.0.3/resource-suspend-waiver-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: kubewarden-rego-policies-library
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Resource Suspend Waiver
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/resource-suspend-waiver
      kubewarden/resources: HelmRelease, GitRepository, OCIRepository, Bucket, HelmChart,
        HelmRepository, Kustomization
      kubewarden/rules: |
        - apiGroups:
          - helm.toolkit.fluxcd.io
          apiVersions:
          - v2
          resources:
          - helmreleases
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - source.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - gitrepositories
          - ocirepositories
          - buckets
          - helmcharts
          - helmrepositories
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - kustomize.toolkit.fluxcd.io
          apiVersions:
          - v1
          resources:
          - kustomizations
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-04-15T06:58:31.772261173Z"
    description: Resource cannot be suspended unless it's on the waiver list.
    digest: a06c643bc7881314f2f866287806ae6a2e3c60d0f8c250dd8be87a5f9d3fa800
    home: https://github.com/kubewarden/rego-policies-library
    keywords:
    - flux
    name: resource-suspend-waiver
    sources:
    - ghcr.io/kubewarden/policies/resource-suspend-waiver:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/resource-suspend-waiver-1.0.2/resource-suspend-waiver-1.0.2.tgz
    version: 1.0.2
  safe-annotations:
  - annotations:
      artifacthub.io/repository: safe-annotations
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Annotations
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-annotations
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.161266641Z"
    description: A policy that validates Kubernetes' resource annotations
    digest: 7ce129bbc6e8fd842ee848d085da271c8ac7998a8c456872d463226ed4504e12
    home: https://github.com/kubewarden/safe-annotations-policy
    keywords:
    - annotations
    name: safe-annotations
    sources:
    - ghcr.io/kubewarden/policies/safe-annotations:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/safe-annotations-1.0.0/safe-annotations-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: safe-annotations
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Annotations
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-annotations
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.10
    apiVersion: v1
    appVersion: 0.2.10
    created: "2025-04-15T06:58:31.893487968Z"
    description: A policy that validates Kubernetes' resource annotations
    digest: 512fb291e7f4d2f45d6996dcc39d56a5dcccdae1bf839d0369f72d1a76ef0ade
    home: https://github.com/kubewarden/safe-annotations-policy
    keywords:
    - annotations
    name: safe-annotations
    sources:
    - ghcr.io/kubewarden/policies/safe-annotations:v0.2.10
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/safe-annotations-0.2.10/safe-annotations-0.2.10.tgz
    version: 0.2.10
  safe-labels:
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:55.877828181Z"
    description: A policy that validates Kubernetes' resource labels
    digest: d92d80b11583d8e4ec2ac378c2b59d87a9d7b1194609c5afebf9d5e6e88de3e2
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/safe-labels-1.0.2/safe-labels-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.273580135Z"
    description: A policy that validates Kubernetes' resource labels
    digest: c70c84d7dd07aa08e762a6f6f00173c243d23e79abfdce19c27d896091b33b15
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/safe-labels-1.0.0/safe-labels-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: safe-labels
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Safe Labels
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/safe-labels
      kubewarden/resources: '*'
      kubewarden/rules: |
        - apiGroups:
          - '*'
          apiVersions:
          - '*'
          resources:
          - '*'
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.14
    apiVersion: v1
    appVersion: 0.1.14
    created: "2025-04-15T06:58:31.98295021Z"
    description: A policy that validates Kubernetes' resource labels
    digest: 68757418c689dde976a654afbfb9a3cda16db50ede2727226af8b32506523622
    home: https://github.com/kubewarden/safe-labels-policy
    keywords:
    - labels
    name: safe-labels
    sources:
    - ghcr.io/kubewarden/policies/safe-labels:v0.1.14
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/safe-labels-0.1.14/safe-labels-0.1.14.tgz
    version: 0.1.14
  seccomp-psp:
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:55.989220812Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: a9dbc67c1878a521170b81886fded56d958f2690bdd85dd6c51a015db89bfffa
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/seccomp-psp-1.0.2/seccomp-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.377408711Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: ccedf6face5779a0adfaed6dd8ffaeaa3b715b620567e25784a26530bdc3334f
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/seccomp-psp-1.0.0/seccomp-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: seccomp-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Seccomp PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/seccomp-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.4
    apiVersion: v1
    appVersion: 0.1.4
    created: "2025-04-15T06:58:32.083413659Z"
    description: Pod Security Policy that controls usage of Seccomp profile
    digest: 299f7b99276097667247afc322bed17edf0146da166b2e65edc1a6acf3758bf9
    home: https://github.com/kubewarden/seccomp-psp-policy
    keywords:
    - psp
    - seccomp
    name: seccomp-psp
    sources:
    - ghcr.io/kubewarden/policies/seccomp-psp:v0.1.4
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/seccomp-psp-0.1.4/seccomp-psp-0.1.4.tgz
    version: 0.1.4
  selinux-psp:
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.100875185Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: f6fde440a04bc8773a70f5433dd4bcf30c4718f698053978efeb968f61ea1129
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/selinux-psp-1.0.2/selinux-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.469841136Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: c970150359da9f8850b5ded44bbc17c2e2c2cdc01e3aa7ed102a4f5aabf05266
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/selinux-psp-1.0.0/selinux-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: selinux-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Selinux PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/selinux-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-04-15T06:58:32.196838702Z"
    description: Replacement for the Kubernetes Pod Security Policy that controls
      the usage of SELinux
    digest: aeb0c922f177f8a8d7012f3141798e24e56eca1c07994707a471e07236bf74f2
    home: https://github.com/kubewarden/selinux-psp-policy
    keywords:
    - psp
    - container
    - runtime
    - selinux
    name: selinux-psp
    sources:
    - ghcr.io/kubewarden/policies/selinux-psp:v0.1.12
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/selinux-psp-0.1.12/selinux-psp-0.1.12.tgz
    version: 0.1.12
  share-pid-namespace-policy:
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.220704506Z"
    description: Policy validates pods sharing processes PID namespace
    digest: a5e9b0d97784db0dea4205aa8cc82b4bb73ecc7edfa086fde17f6edd16db5f43
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/share-pid-namespace-policy-1.0.2/share-pid-namespace-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.570726406Z"
    description: Policy validates pods sharing processes PID namespace
    digest: 34bab38f03c5e163b251eda5099c7c6429e95edf35b1391d85252a7eff954852
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/share-pid-namespace-policy-1.0.0/share-pid-namespace-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: share-pid-namespace
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Share PID namespace
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/share-pid-namespace-policy
      kubewarden/resources: Pod,Replicationcontroller,Deployment,Replicaset,Statefulset,Daemonset,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.1
    apiVersion: v1
    appVersion: 0.1.1
    created: "2025-04-15T06:58:32.301329958Z"
    description: Policy validates pods sharing processes PID namespace
    digest: 14000579cce460e04e08f52d0fa34e45ef8bfd5f37dae55b7944080f2b20c291
    home: https://github.com/kubewarden/share-pid-namespace-policy
    keywords:
    - pod
    - pid
    name: share-pid-namespace-policy
    sources:
    - ghcr.io/kubewarden/policies/share-pid-namespace-policy:v0.1.1
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/share-pid-namespace-policy-0.1.1/share-pid-namespace-policy-0.1.1.tgz
    version: 0.1.1
  sysctl-psp:
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.3
    apiVersion: v1
    appVersion: 1.0.3
    created: "2025-07-01T20:20:56.318006831Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 029cdff4b8520251f121dea609a291fe8776915b4be4fd2bcb9e091bda74d1a6
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/sysctl-psp-1.0.3/sysctl-psp-1.0.3.tgz
    version: 1.0.3
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.823794228Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 9f40800ba094445161a2205751a8694e012370327f2d2ee740901ba071324ddb
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/sysctl-psp-1.0.0/sysctl-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: sysctl-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Sysctl PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/sysctl-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.12
    apiVersion: v1
    appVersion: 0.1.12
    created: "2025-04-15T06:58:32.411825249Z"
    description: A Pod Security Policy that controls usage of sysctls in pods
    digest: 588f87acd8d284d367fa2a1ae583b1c1578372d5ad9b0a4318e11125c3135cc5
    home: https://github.com/kubewarden/sysctl-psp-policy
    keywords:
    - sysctl
    - psp
    - pod
    name: sysctl-psp
    sources:
    - ghcr.io/kubewarden/policies/sysctl-psp:v0.1.12
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/sysctl-psp-0.1.12/sysctl-psp-0.1.12.tgz
    version: 0.1.12
  trusted-repos:
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.57219443Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 037fc54d30f52f3b2861125cdac763e9bbcc520b8783a366375ef9bba316b090
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/trusted-repos-1.0.2/trusted-repos-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:01.95980128Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: 47c8f9add33473a66517ba4f4141de5be0c5c218752e848e88ed84dc992eb169
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/trusted-repos-1.0.0/trusted-repos-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: trusted-repos
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Trusted Repos
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/trusted-repos
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.2.0
    apiVersion: v1
    appVersion: 0.2.0
    created: "2025-04-15T06:58:32.507929669Z"
    description: Kubewarden policy that restricts what registries, tags and images
      can pods on your cluster refer to
    digest: c3e6a74cd10f3e05c7583cdfee7341ba28aab3496d3a1e9281a5e707371ed9cb
    home: https://github.com/kubewarden/trusted-repos-policy
    keywords:
    - image
    - registry
    - tag
    name: trusted-repos
    sources:
    - ghcr.io/kubewarden/policies/trusted-repos:v0.2.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/trusted-repos-0.2.0/trusted-repos-0.2.0.tgz
    version: 0.2.0
  unique-service-selector-policy:
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.69447393Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 6dd9fb3743db7294af2c13d316749722ff1521145325c76ecb4da4dffecb0bd7
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/unique-service-selector-policy-1.0.2/unique-service-selector-policy-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:02.07193396Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: 2b6288e17272800358ea4cc2fbfb497c822baef468481a4bd71e4dbdbb85d781
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/unique-service-selector-policy-1.0.0/unique-service-selector-policy-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: unique-service-selector
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/contextAwareResources: |
        - apiVersion: v1
          kind: Service
      kubewarden/displayName: Unique service selector
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/unique-service-selector-policy
      kubewarden/resources: Service
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - services
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.0
    apiVersion: v1
    appVersion: 0.1.0
    created: "2025-04-15T06:58:32.605745441Z"
    description: Policy validates that there are no services with the same set of
      selectors
    digest: b03c4ed1f1f5127000e83331dd81be7408e397e2bf34b94495d679424ee83eb1
    home: https://github.com/kubewarden/unique-service-selector-policy
    keywords:
    - service
    - selector
    name: unique-service-selector-policy
    sources:
    - ghcr.io/kubewarden/policies/unique-service-selector-policy:v0.1.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/unique-service-selector-policy-0.1.0/unique-service-selector-policy-0.1.0.tgz
    version: 0.1.0
  user-group-psp:
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.830537769Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: d838112675963ea870f4f98e578cf65337678939c3919d27114dd678f90b08d7
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/user-group-psp-1.0.2/user-group-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:02.167349885Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: 0cb4ed456eb0ad624229e4620c5f5f4523cbc03b78d9fd47a3d325666a9f895c
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/user-group-psp-1.0.0/user-group-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: user-group-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: User Group PSP
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/user-group-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.6.3
    apiVersion: v1
    appVersion: 0.6.3
    created: "2025-04-15T06:58:32.72433718Z"
    description: Kubewarden Policy that controls containers user and groups
    digest: 3b20092ec73f5da258b1ef58f2a904e370a5581414faa9f36923497e96ae4d62
    home: https://github.com/kubewarden/user-group-psp-policy
    keywords:
    - psp
    - container
    - user
    - group
    name: user-group-psp
    sources:
    - ghcr.io/kubewarden/policies/user-group-psp:v0.6.3
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/user-group-psp-0.6.3/user-group-psp-0.6.3.tgz
    version: 0.6.3
  verify-image-signatures:
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:56.941208201Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: ad1c082c5eba9db9ad892458984b14eae2ad3bb3741484e994828c8910846691
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/verify-image-signatures-1.0.2/verify-image-signatures-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:02.259285601Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: 2c41a1e1ebfc341db78b1cd9ffbc64a6ef6b89c725241d48f980f8a1dd8b7a06
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/verify-image-signatures-1.0.0/verify-image-signatures-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: verify-image-signatures
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Verify Image Signatures
      kubewarden/mutation: "true"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/verify-image-signatures
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.3.2
    apiVersion: v1
    appVersion: 0.3.2
    created: "2025-04-15T06:58:32.890056813Z"
    description: A Kubewarden Policy that verifies all the signatures of the container
      images referenced by a Pod
    digest: 67346cadd8a76db78ac4019d72dcc7d7b5de1ad26fe9ce92e5849007449addc4
    home: https://github.com/kubewarden/verify-image-signatures
    keywords:
    - pod
    - signature
    - sigstore
    - trusted
    name: verify-image-signatures
    sources:
    - ghcr.io/kubewarden/policies/verify-image-signatures:v0.3.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/verify-image-signatures-0.3.2/verify-image-signatures-0.3.2.tgz
    version: 0.3.2
  volumemounts:
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:02.352834673Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: 61c91f4e071c5a086b02541a86bb6b4ecbc9a11b6f0195377be3a2d6c48c6c37
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/volumemounts-1.0.0/volumemounts-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: volumemounts-policy
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: volumeMounts
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumemounts
      kubewarden/resources: Pod,Deployment,Replicaset,Statefulset,Daemonset,Replicationcontroller,Job,Cronjob
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - replicationcontrollers
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - apps
          apiVersions:
          - v1
          resources:
          - deployments
          - replicasets
          - statefulsets
          - daemonsets
          operations:
          - CREATE
          - UPDATE
        - apiGroups:
          - batch
          apiVersions:
          - v1
          resources:
          - jobs
          - cronjobs
          operations:
          - CREATE
          - UPDATE
      kubewarden/tag: v0.1.7
    apiVersion: v1
    appVersion: 0.1.7
    created: "2025-04-15T06:58:33.014287883Z"
    description: Policy that inspects containers, init containers, and ephemeral containers,
      and restricts their usage of volumes by  checking the `volume` name being used
      in `volumeMounts[*].name`
    digest: d92ad10060a323610c29f509d5f11253790ba39969136f2b394d60f5a4562de4
    home: https://github.com/kubewarden/volumemounts-policy
    keywords:
    - container
    - volumeMounts
    - volume
    - pod
    - workload resources
    name: volumemounts
    sources:
    - ghcr.io/kubewarden/policies/volumemounts:v0.1.7
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/volumemounts-0.1.7/volumemounts-0.1.7.tgz
    version: 0.1.7
  volumes-psp:
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.2
    apiVersion: v1
    appVersion: 1.0.2
    created: "2025-07-01T20:20:57.168090501Z"
    description: Pod Security Policy that controls usage of volumes
    digest: 4c46717f9e68081ed6c1d7e8fd95846db1cdaa9b1f494033c5f4223ae9934a8a
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.0.2
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/volumes-psp-1.0.2/volumes-psp-1.0.2.tgz
    version: 1.0.2
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v1.0.0
    apiVersion: v1
    appVersion: 1.0.0
    created: "2025-05-05T10:29:02.456619325Z"
    description: Pod Security Policy that controls usage of volumes
    digest: c45e304b8bb2f6390f0457f917600f075639c49431d0e468167cfce3cd0c18bd
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v1.0.0
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/volumes-psp-1.0.0/volumes-psp-1.0.0.tgz
    version: 1.0.0
  - annotations:
      artifacthub.io/repository: volumes-psp
      catalog.cattle.io/hidden: "true"
      catalog.cattle.io/type: kubewarden-policy
      catalog.cattle.io/ui-component: kubewarden
      kubewarden/displayName: Volumes PSP
      kubewarden/mutation: "false"
      kubewarden/registry: ghcr.io
      kubewarden/repository: kubewarden/policies/volumes-psp
      kubewarden/resources: Pod
      kubewarden/rules: |
        - apiGroups:
          - ''
          apiVersions:
          - v1
          resources:
          - pods
          operations:
          - CREATE
      kubewarden/tag: v0.1.11
    apiVersion: v1
    appVersion: 0.1.11
    created: "2025-04-15T06:58:33.137995227Z"
    description: Pod Security Policy that controls usage of volumes
    digest: c224c56f72c05ca431eb7232f66b9534c3517ae1596c2f4c1712754aa5e89197
    home: https://github.com/kubewarden/volumes-psp-policy
    keywords:
    - psp
    - pod
    - volumes
    name: volumes-psp
    sources:
    - ghcr.io/kubewarden/policies/volumes-psp:v0.1.11
    urls:
    - https://github.com/kravciak/policy-catalog/releases/download/volumes-psp-0.1.11/volumes-psp-0.1.11.tgz
    version: 0.1.11
generated: "2025-07-01T20:45:09.713552439Z"
